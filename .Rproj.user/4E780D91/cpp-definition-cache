[
    {
        "file": "E:/Dropbox/implicit/inst/include/fftw3.h",
        "file_last_write": 1594181805.0,
        "definitions": []
    },
    {
        "file": "E:/Dropbox/implicit/src/convenienceFunctions.h",
        "file_last_write": 1595282100.0,
        "definitions": [
            {
                "usr": "c:@F@logit#d#",
                "kind": 6,
                "parent_name": "",
                "name": "logit(double)",
                "file": "E:/Dropbox/implicit/src/convenienceFunctions.h",
                "line": 6,
                "column": 15
            },
            {
                "usr": "c:@F@expit#d#",
                "kind": 6,
                "parent_name": "",
                "name": "expit(double)",
                "file": "E:/Dropbox/implicit/src/convenienceFunctions.h",
                "line": 10,
                "column": 15
            }
        ]
    },
    {
        "file": "E:/Dropbox/implicit/src/dst1.cpp",
        "file_last_write": 1595259529.0,
        "definitions": [
            {
                "usr": "c:@F@dst1#$@N@Eigen@C@Matrix>#d#VI-1#VI-1#VI0#VI-1#VI-1#",
                "kind": 6,
                "parent_name": "",
                "name": "dst1(Eigen::MatrixXd)",
                "file": "E:/Dropbox/implicit/src/dst1.cpp",
                "line": 8,
                "column": 17
            }
        ]
    },
    {
        "file": "E:/Dropbox/implicit/src/fftPlan.h",
        "file_last_write": 1595614801.0,
        "definitions": [
            {
                "usr": "c:@C@fftPlan",
                "kind": 2,
                "parent_name": "",
                "name": "fftPlan",
                "file": "E:/Dropbox/implicit/src/fftPlan.h",
                "line": 10,
                "column": 7
            },
            {
                "usr": "c:@C@fftPlan@F@dst_1#",
                "kind": 7,
                "parent_name": "fftPlan",
                "name": "dst_1",
                "file": "E:/Dropbox/implicit/src/fftPlan.h",
                "line": 51,
                "column": 8
            },
            {
                "usr": "c:@C@fftPlan@F@dst_1_reverse#",
                "kind": 7,
                "parent_name": "fftPlan",
                "name": "dst_1_reverse",
                "file": "E:/Dropbox/implicit/src/fftPlan.h",
                "line": 57,
                "column": 8
            },
            {
                "usr": "c:@C@fftPlan@F@multiplyBy_I_A_inverse#d#d#d#",
                "kind": 7,
                "parent_name": "fftPlan",
                "name": "multiplyBy_I_A_inverse(double, double, double)",
                "file": "E:/Dropbox/implicit/src/fftPlan.h",
                "line": 63,
                "column": 8
            },
            {
                "usr": "c:@C@fftPlan@F@multiplyBy_pow_neg_A#d#d#d#",
                "kind": 7,
                "parent_name": "fftPlan",
                "name": "multiplyBy_pow_neg_A(double, double, double)",
                "file": "E:/Dropbox/implicit/src/fftPlan.h",
                "line": 84,
                "column": 8
            },
            {
                "usr": "c:@C@fftPlan@F@laplacianEigenvalue#I#I#I#I#d#d#",
                "kind": 7,
                "parent_name": "fftPlan",
                "name": "laplacianEigenvalue(int, int, int, int, double, double)",
                "file": "E:/Dropbox/implicit/src/fftPlan.h",
                "line": 105,
                "column": 17
            }
        ]
    },
    {
        "file": "E:/Dropbox/implicit/src/inversionFunctions.h",
        "file_last_write": 1595641059.0,
        "definitions": [
            {
                "usr": "c:@F@fixBoundary#$@N@Eigen@C@Matrix>#d#VI-1#VI1#VI0#VI-1#VI1#&$@N@Eigen@C@Matrix>#I#VI-1#VI1#VI0#VI-1#VI1#",
                "kind": 6,
                "parent_name": "",
                "name": "fixBoundary(Eigen::VectorXd, Eigen::VectorXi &)",
                "file": "E:/Dropbox/implicit/src/inversionFunctions.h",
                "line": 10,
                "column": 17
            },
            {
                "usr": "c:@F@invert#I#I#&$@N@Eigen@C@Matrix>#d#VI-1#VI1#VI0#VI-1#VI1#S0_#S0_#I#I#d#d#d#I#b#b#",
                "kind": 6,
                "parent_name": "",
                "name": "invert(int, int, Eigen::VectorXd &, Eigen::VectorXd &, Eigen::VectorXd &, int, int, double, double, double, int, bool, bool)",
                "file": "E:/Dropbox/implicit/src/inversionFunctions.h",
                "line": 24,
                "column": 17
            },
            {
                "usr": "c:@F@invert_Irregular#I#I#&$@N@Eigen@C@Matrix>#d#VI-1#VI1#VI0#VI-1#VI1#S0_#S0_#I#d#I#&$@N@Eigen@C@Matrix>#I#VI-1#VI1#VI0#VI-1#VI1#b#d#d#I#b#",
                "kind": 6,
                "parent_name": "",
                "name": "invert_Irregular(int, int, Eigen::VectorXd &, Eigen::VectorXd &, Eigen::VectorXd &, int, double, int, Eigen::VectorXi &, bool, double, double, int, bool)",
                "file": "E:/Dropbox/implicit/src/inversionFunctions.h",
                "line": 132,
                "column": 17
            }
        ]
    },
    {
        "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
        "file_last_write": 1595625757.0,
        "definitions": [
            {
                "usr": "c:@C@KF_diffusion",
                "kind": 2,
                "parent_name": "",
                "name": "KF_diffusion",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 10,
                "column": 7
            },
            {
                "usr": "c:@C@KF_diffusion@F@setInitialConditions#",
                "kind": 7,
                "parent_name": "KF_diffusion",
                "name": "setInitialConditions",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 231,
                "column": 8
            },
            {
                "usr": "c:@C@KF_diffusion@F@computeDiffusion#I#d#",
                "kind": 7,
                "parent_name": "KF_diffusion",
                "name": "computeDiffusion(int, double)",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 248,
                "column": 8
            },
            {
                "usr": "c:@C@KF_diffusion@F@logLikelihood#",
                "kind": 7,
                "parent_name": "KF_diffusion",
                "name": "logLikelihood",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 275,
                "column": 10
            },
            {
                "usr": "c:@C@KF_diffusion@F@dlogLike_dmu#I#d#",
                "kind": 7,
                "parent_name": "KF_diffusion",
                "name": "dlogLike_dmu(int, double)",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 299,
                "column": 19
            },
            {
                "usr": "c:@C@KF_diffusion@F@dlogLike_dgamma#I#d#",
                "kind": 7,
                "parent_name": "KF_diffusion",
                "name": "dlogLike_dgamma(int, double)",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 365,
                "column": 19
            },
            {
                "usr": "c:@C@KF_diffusion@F@dlogLike_dlongLat#I#d#",
                "kind": 7,
                "parent_name": "KF_diffusion",
                "name": "dlogLike_dlongLat(int, double)",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 407,
                "column": 19
            },
            {
                "usr": "c:@C@KF_diffusion@F@dlogLike_dsigma#I#d#",
                "kind": 7,
                "parent_name": "KF_diffusion",
                "name": "dlogLike_dsigma(int, double)",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 466,
                "column": 19
            },
            {
                "usr": "c:@C@KF_diffusion@F@dlogLike_dkappa#I#d#",
                "kind": 7,
                "parent_name": "KF_diffusion",
                "name": "dlogLike_dkappa(int, double)",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 520,
                "column": 19
            },
            {
                "usr": "c:@C@KF_diffusion@F@dlogLike_dEta#I#d#",
                "kind": 7,
                "parent_name": "KF_diffusion",
                "name": "dlogLike_dEta(int, double)",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 573,
                "column": 19
            },
            {
                "usr": "c:@C@KF_diffusion@F@dl_du#&$@N@Eigen@C@Matrix>#d#VI-1#VI-1#VI0#VI-1#VI-1#",
                "kind": 7,
                "parent_name": "KF_diffusion",
                "name": "dl_du(Eigen::MatrixXd &)",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 595,
                "column": 10
            },
            {
                "usr": "c:@C@KF_diffusion@F@differentiateLogLikelihood#",
                "kind": 7,
                "parent_name": "KF_diffusion",
                "name": "differentiateLogLikelihood",
                "file": "E:/Dropbox/implicit/src/kf_diffusion.h",
                "line": 620,
                "column": 19
            }
        ]
    },
    {
        "file": "E:/Dropbox/implicit/src/modelFitting.cpp",
        "file_last_write": 1595626560.0,
        "definitions": []
    },
    {
        "file": "E:/Dropbox/implicit/src/multiplyByLaplacian.h",
        "file_last_write": 1595629291.0,
        "definitions": [
            {
                "usr": "c:@F@fick_L_f#&$@N@Eigen@C@Matrix>#d#VI-1#VI1#VI0#VI-1#VI1#S0_#I#I#b#d#d#",
                "kind": 6,
                "parent_name": "",
                "name": "fick_L_f(Eigen::VectorXd &, Eigen::VectorXd &, int, int, bool, double, double)",
                "file": "E:/Dropbox/implicit/src/multiplyByLaplacian.h",
                "line": 24,
                "column": 17
            },
            {
                "usr": "c:@F@homogeneous_L_f#&$@N@Eigen@C@Matrix>#d#VI-1#VI1#VI0#VI-1#VI1#I#I#b#d#d#",
                "kind": 6,
                "parent_name": "",
                "name": "homogeneous_L_f(Eigen::VectorXd &, int, int, bool, double, double)",
                "file": "E:/Dropbox/implicit/src/multiplyByLaplacian.h",
                "line": 91,
                "column": 17
            },
            {
                "usr": "c:@F@general_Homogeneous_Lf#&$@N@Eigen@C@Matrix>#d#VI-1#VI1#VI0#VI-1#VI1#I#I#&$@N@Eigen@C@Matrix>#I#VI-1#VI1#VI0#VI-1#VI1#b#d#d#",
                "kind": 6,
                "parent_name": "",
                "name": "general_Homogeneous_Lf(Eigen::VectorXd &, int, int, Eigen::VectorXi &, bool, double, double)",
                "file": "E:/Dropbox/implicit/src/multiplyByLaplacian.h",
                "line": 152,
                "column": 17
            },
            {
                "usr": "c:@F@general_Fick_Lf#&$@N@Eigen@C@Matrix>#d#VI-1#VI1#VI0#VI-1#VI1#S0_#I#I#&$@N@Eigen@C@Matrix>#I#VI-1#VI1#VI0#VI-1#VI1#b#d#d#",
                "kind": 6,
                "parent_name": "",
                "name": "general_Fick_Lf(Eigen::VectorXd &, Eigen::VectorXd &, int, int, Eigen::VectorXi &, bool, double, double)",
                "file": "E:/Dropbox/implicit/src/multiplyByLaplacian.h",
                "line": 249,
                "column": 17
            }
        ]
    }
]